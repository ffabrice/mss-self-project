ubuntu@Ubuntu-22:~/MSSS/work/TESTFINALPROJECT9/mss-self-project$ ./setup.sh 
---------------------------------------
------ Welcome to VPN Automation ------
---------------------------------------

*** check conf ...
*** is aws cli installed ? 
aws-cli/2.13.24 Python/3.11.5 Linux/6.2.0-36-generic exe/x86_64.ubuntu.22 prompt/off
*** is Terraform installed ? 
Terraform v1.6.0
on linux_amd64

Your version of Terraform is out of date! The latest version
is 1.6.2. You can update by downloading from https://www.terraform.io/downloads.html
*** is python installed ? 
Python 3.10.12
*** is Ansible installed ? 
ansible [core 2.15.4]
  config file = None
  configured module search path = ['/home/ubuntu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /home/ubuntu/.local/pipx/venvs/ansible-core/lib/python3.10/site-packages/ansible
  ansible collection location = /home/ubuntu/.ansible/collections:/usr/share/ansible/collections
  executable location = /home/ubuntu/.local/bin/ansible
  python version = 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] (/home/ubuntu/.local/pipx/venvs/ansible-core/bin/python)
  jinja version = 3.1.2
  libyaml = True

*** check credentials ...
*** on aws side :
{
    "UserId": "...",
    "Account": "708113109960",
    "Arn": "arn:aws:sts::708113109960:assumed-role/AWSReservedSSO_DevopsLab_a5ad8dc258100c0a/..."
}
*** on ovh side :
https://auth.cloud.ovh.net/v3
user-rj8rP3ysvdp3
GRA7

So, 
Would you like to continue ? Only 'yes' will be accepted to confirm
yes
------ ok, let s go ------

Initializing the backend...
Initializing modules...
- create-ec2-instance in modules/create-ec2-instance
- create-ovh-instance in modules/create-ovh-instance
- deploy-vpn-connection in modules/deploy-vpn-connection

Initializing provider plugins...
- terraform.io/builtin/terraform is built in to Terraform
- Finding latest version of hashicorp/aws...
- Finding latest version of hashicorp/tls...
- Finding terraform-provider-openstack/openstack versions matching "~> 1.42.0"...
- Finding latest version of hashicorp/local...
- Finding latest version of hashicorp/null...
- Installing terraform-provider-openstack/openstack v1.42.0...
- Installed terraform-provider-openstack/openstack v1.42.0 (self-signed, key ID 4F80527A391BEFD2)
- Installing hashicorp/local v2.4.0...
- Installed hashicorp/local v2.4.0 (signed by HashiCorp)
- Installing hashicorp/null v3.2.1...
- Installed hashicorp/null v3.2.1 (signed by HashiCorp)
- Installing hashicorp/aws v5.24.0...
- Installed hashicorp/aws v5.24.0 (signed by HashiCorp)
- Installing hashicorp/tls v4.0.4...
- Installed hashicorp/tls v4.0.4 (signed by HashiCorp)

Partner and community providers are signed by their developers.
If you'd like to know more about provider signing, you can read about it here:
https://www.terraform.io/docs/cli/plugins/signing.html

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
module.create-ec2-instance.data.aws_ami.ubuntu: Reading...
module.create-ec2-instance.data.aws_route53_zone.selected: Reading...
module.create-ec2-instance.data.aws_ami.ubuntu: Read complete after 1s [id=ami-073e5edf4b5d15fc8]
module.create-ec2-instance.data.aws_route53_zone.selected: Read complete after 1s [id=Z03385262WMCAFO2KASN1]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # local_file.ansible_check_inventory_file will be created
  + resource "local_file" "ansible_check_inventory_file" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/check-conf/inventory.ini"
      + id                   = (known after apply)
    }

  # local_file.ansible_check_vars_file will be created
  + resource "local_file" "ansible_check_vars_file" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/check-conf/vars/variables.yml"
      + id                   = (known after apply)
    }

  # local_file.aws_ansible_nginx_config_file will be created
  + resource "local_file" "aws_ansible_nginx_config_file" {
      + content              = <<-EOT
            [defaults]
            host_key_checking = False
        EOT
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/install-nginx-on-ec2/ansible.cfg"
      + id                   = (known after apply)
    }

  # local_file.aws_ansible_nginx_inventory_file will be created
  + resource "local_file" "aws_ansible_nginx_inventory_file" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/install-nginx-on-ec2/inventory.ini"
      + id                   = (known after apply)
    }

  # local_file.aws_ansible_website_config_file will be created
  + resource "local_file" "aws_ansible_website_config_file" {
      + content              = <<-EOT
            [defaults]
            host_key_checking = False
        EOT
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/deploy-website/ansible.cfg"
      + id                   = (known after apply)
    }

  # local_file.aws_ansible_website_generic_file will be created
  + resource "local_file" "aws_ansible_website_generic_file" {
      + content              = <<-EOT
            domain: FINALselfmsssTEST.devops.intuitivesoft.cloud.
        EOT
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/deploy-website/vars/generic.yml"
      + id                   = (known after apply)
    }

  # local_file.aws_ansible_website_inventory_file will be created
  + resource "local_file" "aws_ansible_website_inventory_file" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/deploy-website/inventory.ini"
      + id                   = (known after apply)
    }

  # local_file.ovh_ansible_config_file will be created
  + resource "local_file" "ovh_ansible_config_file" {
      + content              = <<-EOT
            [defaults]
            host_key_checking = False
        EOT
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/install-strongswan-on-ovh/ansible.cfg"
      + id                   = (known after apply)
    }

  # local_file.ovh_ansible_inventory_file will be created
  + resource "local_file" "ovh_ansible_inventory_file" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/install-strongswan-on-ovh/inventory.ini"
      + id                   = (known after apply)
    }

  # null_resource.aws_ansible_certificate_playbook will be created
  + resource "null_resource" "aws_ansible_certificate_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # null_resource.aws_ansible_nginx_playbook will be created
  + resource "null_resource" "aws_ansible_nginx_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # null_resource.aws_ansible_vhost_playbook will be created
  + resource "null_resource" "aws_ansible_vhost_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # null_resource.aws_ansible_website_playbook will be created
  + resource "null_resource" "aws_ansible_website_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # null_resource.check_conf will be created
  + resource "null_resource" "check_conf" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # null_resource.check_tunnels_up will be created
  + resource "null_resource" "check_tunnels_up" {
      + id = (known after apply)
    }

  # null_resource.ovh_strongswan_playbook will be created
  + resource "null_resource" "ovh_strongswan_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "file_changed" = (known after apply)
        }
    }

  # module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell will be created
  + resource "aws_instance" "aws-ec2-instance-tf-sell" {
      + ami                                  = "ami-073e5edf4b5d15fc8"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.nano"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "FINALselfmsssTEST_aws_keypair"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = false
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "FINALselfmsssTEST-ec2-instance"
        }
      + tags_all                             = {
          + "Name" = "FINALselfmsssTEST-ec2-instance"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # module.create-ec2-instance.aws_internet_gateway.aws-igw-tf-sell will be created
  + resource "aws_internet_gateway" "aws-igw-tf-sell" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "FINALselfmsssTEST-igw"
        }
      + tags_all = {
          + "Name" = "FINALselfmsssTEST-igw"
        }
      + vpc_id   = (known after apply)
    }

  # module.create-ec2-instance.aws_key_pair.aws-public-key-tf-sell will be created
  + resource "aws_key_pair" "aws-public-key-tf-sell" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "FINALselfmsssTEST_aws_keypair"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = (known after apply)
      + tags            = {
          + "Name" = "FINALselfmsssTEST_aws_keypair"
        }
      + tags_all        = {
          + "Name" = "FINALselfmsssTEST_aws_keypair"
        }
    }

  # module.create-ec2-instance.aws_route53_record.www will be created
  + resource "aws_route53_record" "www" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "finalselfmssstest.devops.intuitivesoft.cloud"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "A"
      + zone_id         = "Z03385262WMCAFO2KASN1"
    }

  # module.create-ec2-instance.aws_route_table.aws-public-routetable-tf-sell will be created
  + resource "aws_route_table" "aws-public-routetable-tf-sell" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + core_network_arn           = ""
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags             = {
          + "Name" = "FINALselfmsssTEST-public-route-table"
        }
      + tags_all         = {
          + "Name" = "FINALselfmsssTEST-public-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.create-ec2-instance.aws_route_table_association.aws-rtasso-tf-sell-wsub will be created
  + resource "aws_route_table_association" "aws-rtasso-tf-sell-wsub" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.create-ec2-instance.aws_security_group.aws-sg-http-tf-sell will be created
  + resource "aws_security_group" "aws-sg-http-tf-sell" {
      + arn                    = (known after apply)
      + description            = "allow http pour ipv4"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "allow any"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "http for ipv4"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = "allow_http"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "FINALselfmsssTEST-http-security-group"
        }
      + tags_all               = {
          + "Name" = "FINALselfmsssTEST-http-security-group"
        }
      + vpc_id                 = (known after apply)
    }

  # module.create-ec2-instance.aws_security_group.aws-sg-https-tf-sell will be created
  + resource "aws_security_group" "aws-sg-https-tf-sell" {
      + arn                    = (known after apply)
      + description            = "allow https pour ipv4"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "allow any"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "https for ipv4"
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = "allow_https"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "FINALselfmsssTEST-http-security-group"
        }
      + tags_all               = {
          + "Name" = "FINALselfmsssTEST-http-security-group"
        }
      + vpc_id                 = (known after apply)
    }

  # module.create-ec2-instance.aws_security_group.aws-sg-icmp-tf-sell will be created
  + resource "aws_security_group" "aws-sg-icmp-tf-sell" {
      + arn                    = (known after apply)
      + description            = "allow icmp pour ipv4"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "allow any"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "icmp for all"
              + from_port        = -1
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "icmp"
              + security_groups  = []
              + self             = false
              + to_port          = -1
            },
        ]
      + name                   = "allow_icmp"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "FINALselfmsssTEST-icmp-security-group"
        }
      + tags_all               = {
          + "Name" = "FINALselfmsssTEST-icmp-security-group"
        }
      + vpc_id                 = (known after apply)
    }

  # module.create-ec2-instance.aws_security_group.aws-sg-rdp-tf-sell will be created
  + resource "aws_security_group" "aws-sg-rdp-tf-sell" {
      + arn                    = (known after apply)
      + description            = "allow rdp pour ipv4"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "allow any"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "rdp for all"
              + from_port        = 3389
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3389
            },
        ]
      + name                   = "allow_rdp"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "FINALselfmsssTEST-rdp-security-group"
        }
      + tags_all               = {
          + "Name" = "FINALselfmsssTEST-rdp-security-group"
        }
      + vpc_id                 = (known after apply)
    }

  # module.create-ec2-instance.aws_security_group.aws-sg-ssh-tf-sell will be created
  + resource "aws_security_group" "aws-sg-ssh-tf-sell" {
      + arn                    = (known after apply)
      + description            = "allow ssh pour ipv4"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "allow any"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "ssh for ipv4"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "allow_ssh"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "FINALselfmsssTEST-ssh-security-group"
        }
      + tags_all               = {
          + "Name" = "FINALselfmsssTEST-ssh-security-group"
        }
      + vpc_id                 = (known after apply)
    }

  # module.create-ec2-instance.aws_subnet.aws-private-subnet-tf-sell will be created
  + resource "aws_subnet" "aws-private-subnet-tf-sell" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "FINALselfmsssTEST-private-subnet"
        }
      + tags_all                                       = {
          + "Name" = "FINALselfmsssTEST-private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.create-ec2-instance.aws_subnet.aws-public-subnet-tf-sell will be created
  + resource "aws_subnet" "aws-public-subnet-tf-sell" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "FINALselfmsssTEST-public-subnet"
        }
      + tags_all                                       = {
          + "Name" = "FINALselfmsssTEST-public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.create-ec2-instance.aws_vpc.awsvpc-tf-sell will be created
  + resource "aws_vpc" "awsvpc-tf-sell" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "FINALselfmsssTEST-vpc"
        }
      + tags_all                             = {
          + "Name" = "FINALselfmsssTEST-vpc"
        }
    }

  # module.create-ec2-instance.local_file.aws-private-key-file-tf-sell will be created
  + resource "local_file" "aws-private-key-file-tf-sell" {
      + content              = (sensitive value)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0600"
      + filename             = "./.ssh/self_aws_keypair_rsa.pem"
      + id                   = (known after apply)
    }

  # module.create-ec2-instance.terraform_data.instance_role will be created
  + resource "terraform_data" "instance_role" {
      + id = (known after apply)
    }

  # module.create-ec2-instance.tls_private_key.aws-keypair-rsa-tf-sell will be created
  + resource "tls_private_key" "aws-keypair-rsa-tf-sell" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + private_key_pem_pkcs8         = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 4096
    }

  # module.create-ovh-instance.local_file.privatekey_filename will be created
  + resource "local_file" "privatekey_filename" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0600"
      + filename             = "./.ssh/self_ovh_keypair_rsa.pem"
      + id                   = (known after apply)
    }

  # module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance will be created
  + resource "openstack_compute_instance_v2" "sell_terraform_instance" {
      + access_ip_v4        = (known after apply)
      + access_ip_v6        = (known after apply)
      + all_metadata        = (known after apply)
      + all_tags            = (known after apply)
      + availability_zone   = (known after apply)
      + flavor_id           = (known after apply)
      + flavor_name         = "d2-2"
      + force_delete        = false
      + id                  = (known after apply)
      + image_id            = (known after apply)
      + image_name          = "Ubuntu 22.04"
      + key_pair            = "FINALselfmsssTEST_ovh_keypair"
      + name                = "FINALselfmsssTEST_ovh_instance"
      + power_state         = "active"
      + region              = (known after apply)
      + security_groups     = (known after apply)
      + stop_before_destroy = false

      + network {
          + access_network = false
          + fixed_ip_v4    = (known after apply)
          + fixed_ip_v6    = (known after apply)
          + floating_ip    = (known after apply)
          + mac            = (known after apply)
          + name           = "Ext-Net"
          + port           = (known after apply)
          + uuid           = (known after apply)
        }
    }

  # module.create-ovh-instance.openstack_compute_keypair_v2.self_keypair will be created
  + resource "openstack_compute_keypair_v2" "self_keypair" {
      + fingerprint = (known after apply)
      + id          = (known after apply)
      + name        = "FINALselfmsssTEST_ovh_keypair"
      + private_key = (known after apply)
      + public_key  = (known after apply)
      + region      = (known after apply)
    }

  # module.deploy-vpn-connection.data.aws_route_table.awsrt-mssssell-tf will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_route_table" "awsrt-mssssell-tf" {
      + arn            = (known after apply)
      + associations   = (known after apply)
      + gateway_id     = (known after apply)
      + id             = (known after apply)
      + owner_id       = (known after apply)
      + route_table_id = (known after apply)
      + routes         = (known after apply)
      + subnet_id      = (known after apply)
      + tags           = (known after apply)
      + vpc_id         = (known after apply)

      + filter {
          + name   = "tag:Name"
          + values = [
              + "FINALselfmsssTEST-public-route-table",
            ]
        }
    }

  # module.deploy-vpn-connection.data.aws_vpc.awsvpc-mssssell-tf will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_vpc" "awsvpc-mssssell-tf" {
      + arn                                  = (known after apply)
      + cidr_block                           = (known after apply)
      + cidr_block_associations              = (known after apply)
      + default                              = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = (known after apply)
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = (known after apply)
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + state                                = (known after apply)
      + tags                                 = (known after apply)

      + filter {
          + name   = "tag:Name"
          + values = [
              + "FINALselfmsssTEST-vpc",
            ]
        }
    }

  # module.deploy-vpn-connection.aws_customer_gateway.aws-customergw-tf-sell will be created
  + resource "aws_customer_gateway" "aws-customergw-tf-sell" {
      + arn        = (known after apply)
      + bgp_asn    = "65000"
      + id         = (known after apply)
      + ip_address = (known after apply)
      + tags       = {
          + "Name" = "FINALselfmsssTEST-customergw"
        }
      + tags_all   = {
          + "Name" = "FINALselfmsssTEST-customergw"
        }
      + type       = "ipsec.1"
    }

  # module.deploy-vpn-connection.aws_route_table.aws-public-routetable-tovgw-tf-sell will be created
  + resource "aws_route_table" "aws-public-routetable-tovgw-tf-sell" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "10.10.1.0/24"
              + core_network_arn           = ""
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags             = {
          + "Name" = "FINALselfmsssTEST-public-route-to-vgw-table"
        }
      + tags_all         = {
          + "Name" = "FINALselfmsssTEST-public-route-to-vgw-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell will be created
  + resource "aws_vpn_connection" "aws-vpnco-tf-sell" {
      + arn                            = (known after apply)
      + core_network_arn               = (known after apply)
      + core_network_attachment_arn    = (known after apply)
      + customer_gateway_configuration = (sensitive value)
      + customer_gateway_id            = (known after apply)
      + enable_acceleration            = (known after apply)
      + id                             = (known after apply)
      + local_ipv4_network_cidr        = (known after apply)
      + local_ipv6_network_cidr        = (known after apply)
      + outside_ip_address_type        = (known after apply)
      + remote_ipv4_network_cidr       = (known after apply)
      + remote_ipv6_network_cidr       = (known after apply)
      + routes                         = (known after apply)
      + static_routes_only             = true
      + tags                           = {
          + "Name" = "FINALselfmsssTEST-vpn"
        }
      + tags_all                       = {
          + "Name" = "FINALselfmsssTEST-vpn"
        }
      + transit_gateway_attachment_id  = (known after apply)
      + tunnel1_address                = (known after apply)
      + tunnel1_bgp_asn                = (known after apply)
      + tunnel1_bgp_holdtime           = (known after apply)
      + tunnel1_cgw_inside_address     = (known after apply)
      + tunnel1_inside_cidr            = (known after apply)
      + tunnel1_inside_ipv6_cidr       = (known after apply)
      + tunnel1_preshared_key          = (sensitive value)
      + tunnel1_vgw_inside_address     = (known after apply)
      + tunnel2_address                = (known after apply)
      + tunnel2_bgp_asn                = (known after apply)
      + tunnel2_bgp_holdtime           = (known after apply)
      + tunnel2_cgw_inside_address     = (known after apply)
      + tunnel2_inside_cidr            = (known after apply)
      + tunnel2_inside_ipv6_cidr       = (known after apply)
      + tunnel2_preshared_key          = (sensitive value)
      + tunnel2_vgw_inside_address     = (known after apply)
      + tunnel_inside_ip_version       = (known after apply)
      + type                           = "ipsec.1"
      + vgw_telemetry                  = (known after apply)
      + vpn_gateway_id                 = (known after apply)
    }

  # module.deploy-vpn-connection.aws_vpn_connection_route.aws-vpnco-route-tf-sell will be created
  + resource "aws_vpn_connection_route" "aws-vpnco-route-tf-sell" {
      + destination_cidr_block = "10.10.1.0/24"
      + id                     = (known after apply)
      + vpn_connection_id      = (known after apply)
    }

  # module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell will be created
  + resource "aws_vpn_gateway" "aws-vpngw-tf-sell" {
      + amazon_side_asn = (known after apply)
      + arn             = (known after apply)
      + id              = (known after apply)
      + tags            = {
          + "Name" = "FINALselfmsssTEST-vpngw"
        }
      + tags_all        = {
          + "Name" = "FINALselfmsssTEST-vpngw"
        }
      + vpc_id          = (known after apply)
    }

  # module.deploy-vpn-connection.aws_vpn_gateway_route_propagation.aws-vpngw-routepropa-tf-sell will be created
  + resource "aws_vpn_gateway_route_propagation" "aws-vpngw-routepropa-tf-sell" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + vpn_gateway_id = (known after apply)
    }

  # module.deploy-vpn-connection.local_file.ansible_vars_tf-sell will be created
  + resource "local_file" "ansible_vars_tf-sell" {
      + content              = (sensitive value)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "./modules/install-strongswan-on-ovh/vars/variables.yml"
      + id                   = (known after apply)
    }

Plan: 43 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_link      = "https://FINALselfmsssTEST.devops.intuitivesoft.cloud."
  + aws_public_ip = (known after apply)
  + ovh_public_ip = (known after apply)
module.create-ovh-instance.openstack_compute_keypair_v2.self_keypair: Creating...
module.create-ec2-instance.tls_private_key.aws-keypair-rsa-tf-sell: Creating...
local_file.ovh_ansible_config_file: Creating...
local_file.aws_ansible_website_generic_file: Creating...
local_file.aws_ansible_website_config_file: Creating...
local_file.aws_ansible_nginx_config_file: Creating...
local_file.aws_ansible_nginx_config_file: Creation complete after 0s [id=0f1737acc32f17be2554840d56c09cf26d4f74ea]
local_file.aws_ansible_website_config_file: Creation complete after 0s [id=0f1737acc32f17be2554840d56c09cf26d4f74ea]
local_file.aws_ansible_website_generic_file: Creation complete after 0s [id=6814c98428937028ebbfb1e26ff54210790e7fdd]
local_file.ovh_ansible_config_file: Creation complete after 0s [id=0f1737acc32f17be2554840d56c09cf26d4f74ea]
module.create-ec2-instance.aws_vpc.awsvpc-tf-sell: Creating...
module.create-ec2-instance.tls_private_key.aws-keypair-rsa-tf-sell: Creation complete after 2s [id=e80d3e192708de679605bdfe011a3e5917b08b03]
module.create-ec2-instance.aws_key_pair.aws-public-key-tf-sell: Creating...
module.create-ec2-instance.local_file.aws-private-key-file-tf-sell: Creating...
module.create-ec2-instance.local_file.aws-private-key-file-tf-sell: Creation complete after 0s [id=74f419a9af06dfd96f25ab81c1ddae12f395311a]
module.create-ovh-instance.openstack_compute_keypair_v2.self_keypair: Creation complete after 2s [id=FINALselfmsssTEST_ovh_keypair]
module.create-ovh-instance.local_file.privatekey_filename: Creating...
module.create-ovh-instance.local_file.privatekey_filename: Creation complete after 1s [id=d78bc98fa60db0e30369c1a650e493df370e88fa]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Creating...
module.create-ec2-instance.aws_key_pair.aws-public-key-tf-sell: Creation complete after 1s [id=FINALselfmsssTEST_aws_keypair]
module.create-ec2-instance.aws_vpc.awsvpc-tf-sell: Creation complete after 2s [id=vpc-0d08e816564c18691]
module.create-ec2-instance.aws_subnet.aws-public-subnet-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-icmp-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-https-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-ssh-tf-sell: Creating...
module.create-ec2-instance.aws_internet_gateway.aws-igw-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-rdp-tf-sell: Creating...
module.create-ec2-instance.aws_subnet.aws-private-subnet-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-http-tf-sell: Creating...
module.create-ec2-instance.aws_subnet.aws-public-subnet-tf-sell: Creation complete after 1s [id=subnet-0dffc26527a90a86f]
module.create-ec2-instance.aws_subnet.aws-private-subnet-tf-sell: Creation complete after 1s [id=subnet-062ea4b6d1dddad7c]
module.create-ec2-instance.aws_internet_gateway.aws-igw-tf-sell: Creation complete after 2s [id=igw-014728c84b24090ed]
module.create-ec2-instance.aws_route_table.aws-public-routetable-tf-sell: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-ssh-tf-sell: Creation complete after 3s [id=sg-0c4077ed44aacb123]
module.create-ec2-instance.aws_security_group.aws-sg-rdp-tf-sell: Creation complete after 3s [id=sg-089002ad5e1bea944]
module.create-ec2-instance.aws_route_table.aws-public-routetable-tf-sell: Creation complete after 1s [id=rtb-011428570322655d9]
module.create-ec2-instance.aws_route_table_association.aws-rtasso-tf-sell-wsub: Creating...
module.create-ec2-instance.aws_security_group.aws-sg-icmp-tf-sell: Creation complete after 3s [id=sg-005a7ce4ebcdccbb2]
module.create-ec2-instance.aws_security_group.aws-sg-https-tf-sell: Creation complete after 3s [id=sg-089ef52d59521187f]
module.create-ec2-instance.aws_security_group.aws-sg-http-tf-sell: Creation complete after 3s [id=sg-032ea5a9e4a75a56a]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Creating...
module.create-ec2-instance.aws_route_table_association.aws-rtasso-tf-sell-wsub: Creation complete after 1s [id=rtbassoc-0f798613d8d5b285e]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [10s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [10s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [20s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [20s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [30s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [30s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [40s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [40s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [50s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [50s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [1m0s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [1m0s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Still creating... [1m10s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [1m10s elapsed]
module.create-ovh-instance.openstack_compute_instance_v2.sell_terraform_instance: Creation complete after 1m18s [id=17da8cbf-8a45-4868-a93c-5d18d9fbcf86]
local_file.ovh_ansible_inventory_file: Creating...
local_file.ovh_ansible_inventory_file: Creation complete after 0s [id=a68aa87e9081946e81cee60c92ae9a15c08c1d8c]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [1m20s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [1m30s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Still creating... [1m40s elapsed]
module.create-ec2-instance.aws_instance.aws-ec2-instance-tf-sell: Creation complete after 1m45s [id=i-03bc882f2bdba9254]
module.create-ec2-instance.terraform_data.instance_role: Creating...
module.create-ec2-instance.terraform_data.instance_role: Provisioning with 'local-exec'...
module.create-ec2-instance.terraform_data.instance_role (local-exec): Executing: ["/bin/sh" "-c" "aws ec2 associate-iam-instance-profile --iam-instance-profile Name=r53-devops --instance-id i-03bc882f2bdba9254 --region us-east-2"]
module.create-ec2-instance.aws_route53_record.www: Creating...
local_file.ansible_check_vars_file: Creating...
local_file.aws_ansible_nginx_inventory_file: Creating...
local_file.aws_ansible_website_inventory_file: Creating...
local_file.ansible_check_inventory_file: Creating...
local_file.ansible_check_vars_file: Creation complete after 0s [id=f40b5a62d2a5828a666abe51b68c258fe4bd9889]
local_file.aws_ansible_nginx_inventory_file: Creation complete after 0s [id=bcb7ccc306637f9ee20bda24f9959d9fe71a1f02]
local_file.ansible_check_inventory_file: Creation complete after 0s [id=ed454446f9e5852186eeb03df3f8e02862b714bf]
local_file.aws_ansible_website_inventory_file: Creation complete after 0s [id=bcb7ccc306637f9ee20bda24f9959d9fe71a1f02]
module.create-ec2-instance.terraform_data.instance_role (local-exec): {
module.create-ec2-instance.terraform_data.instance_role (local-exec):     "IamInstanceProfileAssociation": {
module.create-ec2-instance.terraform_data.instance_role (local-exec):         "AssociationId": "iip-assoc-0241ce698147c4b19",
module.create-ec2-instance.terraform_data.instance_role (local-exec):         "InstanceId": "i-03bc882f2bdba9254",
module.create-ec2-instance.terraform_data.instance_role (local-exec):         "IamInstanceProfile": {
module.create-ec2-instance.terraform_data.instance_role (local-exec):             "Arn": "arn:aws:iam::708113109960:instance-profile/r53-devops",
module.create-ec2-instance.terraform_data.instance_role (local-exec):             "Id": "AIPA2JXWUSPEKXGQHLQFF"
module.create-ec2-instance.terraform_data.instance_role (local-exec):         },
module.create-ec2-instance.terraform_data.instance_role (local-exec):         "State": "associating"
module.create-ec2-instance.terraform_data.instance_role (local-exec):     }
module.create-ec2-instance.terraform_data.instance_role (local-exec): }
module.create-ec2-instance.terraform_data.instance_role: Creation complete after 1s [id=c227fa0a-f0a0-2207-5dca-36de5a2965f8]
module.create-ec2-instance.aws_route53_record.www: Still creating... [10s elapsed]
module.create-ec2-instance.aws_route53_record.www: Still creating... [20s elapsed]
module.create-ec2-instance.aws_route53_record.www: Still creating... [30s elapsed]
module.create-ec2-instance.aws_route53_record.www: Still creating... [40s elapsed]
module.create-ec2-instance.aws_route53_record.www: Creation complete after 48s [id=Z03385262WMCAFO2KASN1_finalselfmssstest.devops.intuitivesoft.cloud._A]
module.deploy-vpn-connection.data.aws_route_table.awsrt-mssssell-tf: Reading...
module.deploy-vpn-connection.data.aws_vpc.awsvpc-mssssell-tf: Reading...
null_resource.aws_ansible_nginx_playbook: Creating...
module.deploy-vpn-connection.aws_customer_gateway.aws-customergw-tf-sell: Creating...
null_resource.aws_ansible_nginx_playbook: Provisioning with 'remote-exec'...
null_resource.aws_ansible_nginx_playbook (remote-exec): Connecting to remote host via SSH...
null_resource.aws_ansible_nginx_playbook (remote-exec):   Host: 3.17.204.236
null_resource.aws_ansible_nginx_playbook (remote-exec):   User: ubuntu
null_resource.aws_ansible_nginx_playbook (remote-exec):   Password: false
null_resource.aws_ansible_nginx_playbook (remote-exec):   Private key: true
null_resource.aws_ansible_nginx_playbook (remote-exec):   Certificate: false
null_resource.aws_ansible_nginx_playbook (remote-exec):   SSH Agent: true
null_resource.aws_ansible_nginx_playbook (remote-exec):   Checking Host Key: false
null_resource.aws_ansible_nginx_playbook (remote-exec):   Target Platform: unix
module.deploy-vpn-connection.data.aws_route_table.awsrt-mssssell-tf: Read complete after 0s [id=rtb-011428570322655d9]
module.deploy-vpn-connection.data.aws_vpc.awsvpc-mssssell-tf: Read complete after 1s [id=vpc-0d08e816564c18691]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Creating...
null_resource.aws_ansible_nginx_playbook (remote-exec): Connected!
null_resource.aws_ansible_nginx_playbook (remote-exec): connected!
null_resource.aws_ansible_nginx_playbook: Provisioning with 'local-exec'...
null_resource.aws_ansible_nginx_playbook (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/install-nginx-on-ec2/inventory.ini ./modules/install-nginx-on-ec2/nginx-install.yml"]

null_resource.aws_ansible_nginx_playbook (local-exec): PLAY [Simple nginx installation] ***********************************************

null_resource.aws_ansible_nginx_playbook (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.aws_ansible_nginx_playbook: Still creating... [10s elapsed]
module.deploy-vpn-connection.aws_customer_gateway.aws-customergw-tf-sell: Still creating... [10s elapsed]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Still creating... [10s elapsed]
module.deploy-vpn-connection.aws_customer_gateway.aws-customergw-tf-sell: Creation complete after 11s [id=cgw-0e09d8848cea5202c]
null_resource.aws_ansible_nginx_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_nginx_playbook (local-exec): TASK [Install nginx package] ***************************************************
null_resource.aws_ansible_nginx_playbook: Still creating... [20s elapsed]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Still creating... [20s elapsed]
null_resource.aws_ansible_nginx_playbook: Still creating... [30s elapsed]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Still creating... [30s elapsed]
null_resource.aws_ansible_nginx_playbook: Still creating... [40s elapsed]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Still creating... [40s elapsed]
null_resource.aws_ansible_nginx_playbook: Still creating... [50s elapsed]
module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Still creating... [50s elapsed]
null_resource.aws_ansible_nginx_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_nginx_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.aws_ansible_nginx_playbook (local-exec): nginx                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

module.deploy-vpn-connection.aws_vpn_gateway.aws-vpngw-tf-sell: Creation complete after 56s [id=vgw-00c18d61daa263abf]
module.deploy-vpn-connection.aws_vpn_gateway_route_propagation.aws-vpngw-routepropa-tf-sell: Creating...
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Creating...
module.deploy-vpn-connection.aws_route_table.aws-public-routetable-tovgw-tf-sell: Creating...
null_resource.aws_ansible_nginx_playbook: Creation complete after 57s [id=157192858513572927]
null_resource.aws_ansible_vhost_playbook: Creating...
null_resource.aws_ansible_vhost_playbook: Provisioning with 'remote-exec'...
null_resource.aws_ansible_vhost_playbook (remote-exec): Connecting to remote host via SSH...
null_resource.aws_ansible_vhost_playbook (remote-exec):   Host: 3.17.204.236
null_resource.aws_ansible_vhost_playbook (remote-exec):   User: ubuntu
null_resource.aws_ansible_vhost_playbook (remote-exec):   Password: false
null_resource.aws_ansible_vhost_playbook (remote-exec):   Private key: true
null_resource.aws_ansible_vhost_playbook (remote-exec):   Certificate: false
null_resource.aws_ansible_vhost_playbook (remote-exec):   SSH Agent: true
null_resource.aws_ansible_vhost_playbook (remote-exec):   Checking Host Key: false
null_resource.aws_ansible_vhost_playbook (remote-exec):   Target Platform: unix
module.deploy-vpn-connection.aws_vpn_gateway_route_propagation.aws-vpngw-routepropa-tf-sell: Creation complete after 0s [id=vgw-00c18d61daa263abf_rtb-011428570322655d9]
module.deploy-vpn-connection.aws_route_table.aws-public-routetable-tovgw-tf-sell: Creation complete after 1s [id=rtb-0ad6c0d21770b7ce4]
null_resource.aws_ansible_vhost_playbook (remote-exec): Connected!
null_resource.aws_ansible_vhost_playbook (remote-exec): connected!
null_resource.aws_ansible_vhost_playbook: Provisioning with 'local-exec'...
null_resource.aws_ansible_vhost_playbook (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/deploy-website/inventory.ini ./modules/deploy-website/create-vhost.yml"]

null_resource.aws_ansible_vhost_playbook (local-exec): PLAY [Configure a new virtualhost] *********************************************

null_resource.aws_ansible_vhost_playbook (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.aws_ansible_vhost_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_vhost_playbook (local-exec): TASK [create www directory for your virtualhost] *******************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [10s elapsed]
null_resource.aws_ansible_vhost_playbook: Still creating... [10s elapsed]
null_resource.aws_ansible_vhost_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_vhost_playbook (local-exec): TASK [delete default nginx site configuration] *********************************
null_resource.aws_ansible_vhost_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_vhost_playbook (local-exec): TASK [deploy new site configuration] *******************************************
null_resource.aws_ansible_vhost_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_vhost_playbook (local-exec): RUNNING HANDLER [restart nginx] ************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [20s elapsed]
null_resource.aws_ansible_vhost_playbook: Still creating... [20s elapsed]
null_resource.aws_ansible_vhost_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_vhost_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.aws_ansible_vhost_playbook (local-exec): nginx                      : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

null_resource.aws_ansible_vhost_playbook: Creation complete after 22s [id=2625952119877628632]
null_resource.aws_ansible_website_playbook: Creating...
null_resource.aws_ansible_website_playbook: Provisioning with 'remote-exec'...
null_resource.aws_ansible_website_playbook (remote-exec): Connecting to remote host via SSH...
null_resource.aws_ansible_website_playbook (remote-exec):   Host: 3.17.204.236
null_resource.aws_ansible_website_playbook (remote-exec):   User: ubuntu
null_resource.aws_ansible_website_playbook (remote-exec):   Password: false
null_resource.aws_ansible_website_playbook (remote-exec):   Private key: true
null_resource.aws_ansible_website_playbook (remote-exec):   Certificate: false
null_resource.aws_ansible_website_playbook (remote-exec):   SSH Agent: true
null_resource.aws_ansible_website_playbook (remote-exec):   Checking Host Key: false
null_resource.aws_ansible_website_playbook (remote-exec):   Target Platform: unix
null_resource.aws_ansible_website_playbook (remote-exec): Connected!
null_resource.aws_ansible_website_playbook (remote-exec): connected!
null_resource.aws_ansible_website_playbook: Provisioning with 'local-exec'...
null_resource.aws_ansible_website_playbook (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/deploy-website/inventory.ini ./modules/deploy-website/create-vhost.yml;ansible-playbook -i ./modules/deploy-website/inventory.ini ./modules/deploy-website/deploy-website.yml"]

null_resource.aws_ansible_website_playbook (local-exec): PLAY [Configure a new virtualhost] *********************************************

null_resource.aws_ansible_website_playbook (local-exec): TASK [Gathering Facts] *********************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [30s elapsed]
null_resource.aws_ansible_website_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): TASK [create www directory for your virtualhost] *******************************
null_resource.aws_ansible_website_playbook: Still creating... [10s elapsed]
null_resource.aws_ansible_website_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): TASK [delete default nginx site configuration] *********************************
null_resource.aws_ansible_website_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): TASK [deploy new site configuration] *******************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [40s elapsed]
null_resource.aws_ansible_website_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.aws_ansible_website_playbook (local-exec): nginx                      : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


null_resource.aws_ansible_website_playbook (local-exec): PLAY [Deploy devops website] ***************************************************

null_resource.aws_ansible_website_playbook (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.aws_ansible_website_playbook: Still creating... [20s elapsed]
null_resource.aws_ansible_website_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): TASK [change index.html] *******************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [50s elapsed]
null_resource.aws_ansible_website_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_website_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.aws_ansible_website_playbook (local-exec): nginx                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

null_resource.aws_ansible_website_playbook: Creation complete after 29s [id=893237361557235721]
null_resource.aws_ansible_certificate_playbook: Creating...
null_resource.aws_ansible_certificate_playbook: Provisioning with 'remote-exec'...
null_resource.aws_ansible_certificate_playbook (remote-exec): Connecting to remote host via SSH...
null_resource.aws_ansible_certificate_playbook (remote-exec):   Host: 3.17.204.236
null_resource.aws_ansible_certificate_playbook (remote-exec):   User: ubuntu
null_resource.aws_ansible_certificate_playbook (remote-exec):   Password: false
null_resource.aws_ansible_certificate_playbook (remote-exec):   Private key: true
null_resource.aws_ansible_certificate_playbook (remote-exec):   Certificate: false
null_resource.aws_ansible_certificate_playbook (remote-exec):   SSH Agent: true
null_resource.aws_ansible_certificate_playbook (remote-exec):   Checking Host Key: false
null_resource.aws_ansible_certificate_playbook (remote-exec):   Target Platform: unix
null_resource.aws_ansible_certificate_playbook (remote-exec): Connected!
null_resource.aws_ansible_certificate_playbook (remote-exec): connected!
null_resource.aws_ansible_certificate_playbook: Provisioning with 'local-exec'...
null_resource.aws_ansible_certificate_playbook (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/deploy-website/inventory.ini ./modules/deploy-website/deploy-certificate.yml"]

null_resource.aws_ansible_certificate_playbook (local-exec): PLAY [Activate SSL certificate] ************************************************

null_resource.aws_ansible_certificate_playbook (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.aws_ansible_certificate_playbook (local-exec): ok: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): TASK [install certbot] *********************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m0s elapsed]
null_resource.aws_ansible_certificate_playbook: Still creating... [10s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m10s elapsed]
null_resource.aws_ansible_certificate_playbook: Still creating... [20s elapsed]
null_resource.aws_ansible_certificate_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): TASK [set certbot privilege] ***************************************************
null_resource.aws_ansible_certificate_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): TASK [install certbot addons] **************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m20s elapsed]
null_resource.aws_ansible_certificate_playbook: Still creating... [30s elapsed]
null_resource.aws_ansible_certificate_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): TASK [issue certificate] *******************************************************
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m30s elapsed]
null_resource.aws_ansible_certificate_playbook: Still creating... [40s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m40s elapsed]
null_resource.aws_ansible_certificate_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): RUNNING HANDLER [restart nginx] ************************************************
null_resource.aws_ansible_certificate_playbook: Still creating... [50s elapsed]
null_resource.aws_ansible_certificate_playbook (local-exec): changed: [nginx]

null_resource.aws_ansible_certificate_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.aws_ansible_certificate_playbook (local-exec): nginx                      : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

null_resource.aws_ansible_certificate_playbook: Creation complete after 52s [id=8145613676886786265]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [1m50s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [2m0s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [2m10s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [2m20s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Still creating... [2m30s elapsed]
module.deploy-vpn-connection.aws_vpn_connection.aws-vpnco-tf-sell: Creation complete after 2m36s [id=vpn-0da76c65f6ab0da81]
module.deploy-vpn-connection.aws_vpn_connection_route.aws-vpnco-route-tf-sell: Creating...
module.deploy-vpn-connection.local_file.ansible_vars_tf-sell: Creating...
module.deploy-vpn-connection.local_file.ansible_vars_tf-sell: Creation complete after 0s [id=02e7528e6b8b47e32919249ca6722eea10c56e0f]
module.deploy-vpn-connection.aws_vpn_connection_route.aws-vpnco-route-tf-sell: Creation complete after 1s [id=10.10.1.0/24:vpn-0da76c65f6ab0da81]
null_resource.ovh_strongswan_playbook: Creating...
null_resource.ovh_strongswan_playbook: Provisioning with 'remote-exec'...
null_resource.ovh_strongswan_playbook (remote-exec): Connecting to remote host via SSH...
null_resource.ovh_strongswan_playbook (remote-exec):   Host: 162.19.118.243
null_resource.ovh_strongswan_playbook (remote-exec):   User: ubuntu
null_resource.ovh_strongswan_playbook (remote-exec):   Password: false
null_resource.ovh_strongswan_playbook (remote-exec):   Private key: true
null_resource.ovh_strongswan_playbook (remote-exec):   Certificate: false
null_resource.ovh_strongswan_playbook (remote-exec):   SSH Agent: true
null_resource.ovh_strongswan_playbook (remote-exec):   Checking Host Key: false
null_resource.ovh_strongswan_playbook (remote-exec):   Target Platform: unix
null_resource.ovh_strongswan_playbook (remote-exec): Connected!
null_resource.ovh_strongswan_playbook (remote-exec): connected!
null_resource.ovh_strongswan_playbook: Provisioning with 'local-exec'...
null_resource.ovh_strongswan_playbook (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/install-strongswan-on-ovh/inventory.ini ./modules/install-strongswan-on-ovh/strongswan-install.yml"]

null_resource.ovh_strongswan_playbook (local-exec): PLAY [webservers] **************************************************************

null_resource.ovh_strongswan_playbook (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.ovh_strongswan_playbook: Still creating... [10s elapsed]
null_resource.ovh_strongswan_playbook (local-exec): ok: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Install strongSwan] *****************************************
null_resource.ovh_strongswan_playbook: Still creating... [20s elapsed]
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Configure ipsec.conf] ***************************************
null_resource.ovh_strongswan_playbook: Still creating... [30s elapsed]
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Configure ipsec.secrets] ************************************
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Prepare Tunnel Installation Script] *************************
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Execute Script] *********************************************
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): TASK [strongswan : Retrieve Script output] *************************************
null_resource.ovh_strongswan_playbook (local-exec): ok: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): RUNNING HANDLER [strongswan : restart ipsec] ***********************************
null_resource.ovh_strongswan_playbook: Still creating... [40s elapsed]
null_resource.ovh_strongswan_playbook (local-exec): changed: [strongswan]

null_resource.ovh_strongswan_playbook (local-exec): PLAY RECAP *********************************************************************
null_resource.ovh_strongswan_playbook (local-exec): strongswan                 : ok=8    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

null_resource.ovh_strongswan_playbook: Creation complete after 42s [id=1203081983787417869]
null_resource.check_tunnels_up: Creating...
null_resource.check_tunnels_up: Provisioning with 'remote-exec'...
null_resource.check_tunnels_up (remote-exec): Connecting to remote host via SSH...
null_resource.check_tunnels_up (remote-exec):   Host: 162.19.118.243
null_resource.check_tunnels_up (remote-exec):   User: ubuntu
null_resource.check_tunnels_up (remote-exec):   Password: false
null_resource.check_tunnels_up (remote-exec):   Private key: true
null_resource.check_tunnels_up (remote-exec):   Certificate: false
null_resource.check_tunnels_up (remote-exec):   SSH Agent: true
null_resource.check_tunnels_up (remote-exec):   Checking Host Key: false
null_resource.check_tunnels_up (remote-exec):   Target Platform: unix
null_resource.check_tunnels_up (remote-exec): Connected!
null_resource.check_tunnels_up (remote-exec): connected!
null_resource.check_tunnels_up: Provisioning with 'local-exec'...
null_resource.check_tunnels_up (local-exec): Executing: ["/bin/sh" "-c" "./checktunnelsup.sh vpn-0da76c65f6ab0da81 us-east-2"]

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******
null_resource.check_tunnels_up: Still creating... [10s elapsed]

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******
null_resource.check_tunnels_up: Still creating... [20s elapsed]

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up: Still creating... [30s elapsed]
null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up: Still creating... [40s elapsed]
null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******
null_resource.check_tunnels_up: Still creating... [50s elapsed]

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************

null_resource.check_tunnels_up (local-exec): ****** Waiting for Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 to become UP. Current state: DOWN ... ******
null_resource.check_tunnels_up: Still creating... [1m0s elapsed]

null_resource.check_tunnels_up (local-exec): ***************************************************************************
null_resource.check_tunnels_up (local-exec): ************ VPN Connection vpn-0da76c65f6ab0da81 is available ************
null_resource.check_tunnels_up (local-exec): ***************************************************************************


null_resource.check_tunnels_up (local-exec): ********************************************************************************
null_resource.check_tunnels_up (local-exec): ************ Tunnel 1 of VPN Connection vpn-0da76c65f6ab0da81 is UP ************
null_resource.check_tunnels_up (local-exec): ********************************************************************************


null_resource.check_tunnels_up (local-exec): ********************************************************************************
null_resource.check_tunnels_up (local-exec): ************ Tunnel 2 of VPN Connection vpn-0da76c65f6ab0da81 is UP ************
null_resource.check_tunnels_up (local-exec): ********************************************************************************

null_resource.check_tunnels_up: Creation complete after 1m7s [id=7475912484851209722]
null_resource.check_conf: Creating...
null_resource.check_conf: Provisioning with 'remote-exec'...
null_resource.check_conf (remote-exec): Connecting to remote host via SSH...
null_resource.check_conf (remote-exec):   Host: 162.19.118.243
null_resource.check_conf (remote-exec):   User: ubuntu
null_resource.check_conf (remote-exec):   Password: false
null_resource.check_conf (remote-exec):   Private key: true
null_resource.check_conf (remote-exec):   Certificate: false
null_resource.check_conf (remote-exec):   SSH Agent: true
null_resource.check_conf (remote-exec):   Checking Host Key: false
null_resource.check_conf (remote-exec):   Target Platform: unix
null_resource.check_conf (remote-exec): Connected!
null_resource.check_conf (remote-exec): connected!
null_resource.check_conf: Provisioning with 'local-exec'...
null_resource.check_conf (local-exec): Executing: ["/bin/sh" "-c" "ansible-playbook -i ./modules/check-conf/inventory.ini ./modules/check-conf/check-conf.yml"]

null_resource.check_conf (local-exec): PLAY [check installed configuration] *******************************************

null_resource.check_conf (local-exec): TASK [Gathering Facts] *********************************************************
null_resource.check_conf (local-exec): ok: [strongswan]
null_resource.check_conf (local-exec): ok: [nginx]

null_resource.check_conf (local-exec): TASK [ping ovh loopback from aws] **********************************************
null_resource.check_conf: Still creating... [10s elapsed]
null_resource.check_conf (local-exec): changed: [strongswan -> nginx(3.17.204.236)]
null_resource.check_conf (local-exec): changed: [nginx]

null_resource.check_conf (local-exec): TASK [debug1] ******************************************************************
null_resource.check_conf (local-exec): ok: [strongswan] => {
null_resource.check_conf (local-exec):     "msg": "ping1 PING 10.10.1.252 (10.10.1.252) 56(84) bytes of data.\n64 bytes from 10.10.1.252: icmp_seq=1 ttl=64 time=99.4 ms\n64 bytes from 10.10.1.252: icmp_seq=2 ttl=64 time=99.3 ms\n64 bytes from 10.10.1.252: icmp_seq=3 ttl=64 time=99.5 ms\n64 bytes from 10.10.1.252: icmp_seq=4 ttl=64 time=99.6 ms\n64 bytes from 10.10.1.252: icmp_seq=5 ttl=64 time=99.5 ms\n\n--- 10.10.1.252 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4006ms\nrtt min/avg/max/mdev = 99.260/99.452/99.574/0.107 ms"
null_resource.check_conf (local-exec): }
null_resource.check_conf (local-exec): ok: [nginx] => {
null_resource.check_conf (local-exec):     "msg": "ping1 PING 10.10.1.252 (10.10.1.252) 56(84) bytes of data.\n64 bytes from 10.10.1.252: icmp_seq=1 ttl=64 time=99.0 ms\n64 bytes from 10.10.1.252: icmp_seq=2 ttl=64 time=99.2 ms\n64 bytes from 10.10.1.252: icmp_seq=3 ttl=64 time=99.4 ms\n64 bytes from 10.10.1.252: icmp_seq=4 ttl=64 time=99.5 ms\n64 bytes from 10.10.1.252: icmp_seq=5 ttl=64 time=99.5 ms\n\n--- 10.10.1.252 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 98.969/99.315/99.504/0.201 ms"
null_resource.check_conf (local-exec): }

null_resource.check_conf (local-exec): TASK [ping ec2 from ovh loopback] **********************************************
null_resource.check_conf: Still creating... [20s elapsed]
null_resource.check_conf (local-exec): changed: [strongswan]
null_resource.check_conf (local-exec): changed: [nginx -> strongswan(162.19.118.243)]

null_resource.check_conf (local-exec): TASK [debug2] ******************************************************************
null_resource.check_conf (local-exec): ok: [strongswan] => {
null_resource.check_conf (local-exec):     "msg": "ping2 PING 10.1.1.92 (10.1.1.92) from 10.10.1.252 : 56(84) bytes of data.\n64 bytes from 10.1.1.92: icmp_seq=1 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=2 ttl=64 time=99.2 ms\n64 bytes from 10.1.1.92: icmp_seq=3 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=4 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=5 ttl=64 time=99.2 ms\n\n--- 10.1.1.92 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4006ms\nrtt min/avg/max/mdev = 99.226/99.284/99.342/0.042 ms"
null_resource.check_conf (local-exec): }
null_resource.check_conf (local-exec): ok: [nginx] => {
null_resource.check_conf (local-exec):     "msg": "ping2 PING 10.1.1.92 (10.1.1.92) from 10.10.1.252 : 56(84) bytes of data.\n64 bytes from 10.1.1.92: icmp_seq=1 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=2 ttl=64 time=102 ms\n64 bytes from 10.1.1.92: icmp_seq=3 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=4 ttl=64 time=99.3 ms\n64 bytes from 10.1.1.92: icmp_seq=5 ttl=64 time=99.2 ms\n\n--- 10.1.1.92 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4007ms\nrtt min/avg/max/mdev = 99.230/99.743/101.649/0.952 ms"
null_resource.check_conf (local-exec): }

null_resource.check_conf (local-exec): TASK [get website with curl] ***************************************************
null_resource.check_conf (local-exec): changed: [nginx -> strongswan(162.19.118.243)]
null_resource.check_conf (local-exec): changed: [strongswan]

null_resource.check_conf (local-exec): TASK [debug3] ******************************************************************
null_resource.check_conf (local-exec): ok: [strongswan] => {
null_resource.check_conf (local-exec):     "msg": "curl1 <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Hello World Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n</head>\n<body>\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-body text-center\">\n            <h1 class=\"card-title\">Hello, World!</h1>\n            <p class=\"card-text\">Welcome to S.E.L.F. (Sandie Eric Lionel Fabrice) website</p>\n            <div class=\"alert alert-warning\" role=\"alert\" id=\"HttpsCheck\">\n              Warning: You are accessing this page over an insecure connection (HTTP). Please consider using a secure connection (HTTPS) for better security.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <script>\n    // JavaScript to change the site's color based on the protocol\n    const isSecure = window.location.protocol === 'https:';\n    const body = document.querySelector('body');\n    const httpMessage = document.getElementById('HttpsCheck');\n    if (isSecure) {\n      body.style.backgroundColor = 'green';\n      httpMessage.classList.add('d-none');\n    } else {\n      body.style.backgroundColor = 'red';\n    }\n  </script>\n</body>\n</html>"
null_resource.check_conf (local-exec): }
null_resource.check_conf (local-exec): ok: [nginx] => {
null_resource.check_conf (local-exec):     "msg": "curl1 <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Hello World Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n</head>\n<body>\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-body text-center\">\n            <h1 class=\"card-title\">Hello, World!</h1>\n            <p class=\"card-text\">Welcome to S.E.L.F. (Sandie Eric Lionel Fabrice) website</p>\n            <div class=\"alert alert-warning\" role=\"alert\" id=\"HttpsCheck\">\n              Warning: You are accessing this page over an insecure connection (HTTP). Please consider using a secure connection (HTTPS) for better security.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <script>\n    // JavaScript to change the site's color based on the protocol\n    const isSecure = window.location.protocol === 'https:';\n    const body = document.querySelector('body');\n    const httpMessage = document.getElementById('HttpsCheck');\n    if (isSecure) {\n      body.style.backgroundColor = 'green';\n      httpMessage.classList.add('d-none');\n    } else {\n      body.style.backgroundColor = 'red';\n    }\n  </script>\n</body>\n</html>"
null_resource.check_conf (local-exec): }

null_resource.check_conf (local-exec): PLAY RECAP *********************************************************************
null_resource.check_conf (local-exec): nginx                      : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
null_resource.check_conf (local-exec): strongswan                 : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

null_resource.check_conf: Creation complete after 21s [id=6253488175580072]

Apply complete! Resources: 43 added, 0 changed, 0 destroyed.

Outputs:

aws_link = "https://FINALselfmsssTEST.devops.intuitivesoft.cloud."
aws_public_ip = "3.17.204.236"
ovh_public_ip = "162.19.118.243"

------------------------------
------ that s all folks ------
------------------------------

ubuntu@Ubuntu-22:~/MSSS/work/TESTFINALPROJECT9/mss-self-project$ 

